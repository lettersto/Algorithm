// LeetCode 926 Flip String to Monotone Increasing

// dp같았지만 진짜 모르겠어서 다른 사람 거 봤는데도
// 이해하기까지 조금 걸렸다.

// 1. 1이 나오기 전까지의 0은 뒤집을 필요가 없다. -> 그러니 무시
// 2. 그렇다면 1이 나온 후의 1과 0부터 무언가 조치가 필요하다.
//    1이 나온 이후에 0이 나온다면, 1과 0 둘 중 하나는 뒤집혀야 한다.
// 3. 1이 나오기 시작하면, 1의 몇 번 나오는지 세기 시작한다.
// 4. 도중에 0을 만난다면, (다시 1이 나오기 전까지) 
//    여태까지 나온 1의 누적 개수와 앞으로 연속해서 나올 0 중
//    작은 쪽의 숫자가 뒤집혀야 한다.
// 5. 그러니 누적된 oneCnt가 있고 0을 만났다면, ans += 1해가면서
//    (누가 뒤집히는지는 상관 없음. 어쩄든 1이 나왔고 0이 나중에 나온다면 둘 중 하나는 뒤집히니까)
//    oneCnt의 숫자를 줄여나간다. (즉, oneCnt는 현재까지의 0과 1의 개수 차이를 나타내기도 하는 것)

const minFlipsMonoIncr = function (s) {
  let ans = 0;
  let oneCnt = 0;

  for (const num of s) {
    if (num === '1') {
      oneCnt += 1;
    }
    if (num === '0' && oneCnt) {
      oneCnt -= 1;
      ans += 1;
    }
  }

  return ans;
};
