// LeetCode 231. Power of Two

// 진짜 수학 공식처럼 외우는 수밖에 없는듯!

// n이 2의 제곱수라고 가정한다면
// 이진수는 10 100 1000 1000 ... 와 같은 형태
// n - 1은 01 011 0111 0111 ... 와 같은 형태이다.

// 그러면 n & (n - 1)은 항상 0이 나올 수 밖에 없다.
// 이 점을 이용해 2의 배수인지 확인이 가능

// n이 2의 제곱수가 아닌 경우에 대해서 생각을 해보니
// n이 2의 제곱수가 아니라면
// 이진수는 1이 첫 자리를 제외한 곳에도 반드시 하나 이상 존재하게 되며
// n - 1은 원래 숫자에서 나머지 비트가 모두 바뀌어도 최상위 비트인 1은 유지가 되게 된다.
// 그렇기 때문에 두 수의 최상위 비트는 &를 해도 1로 남게 되고, 0이 될 수 없게 되는듯!

class Solution {
public:
    bool isPowerOfTwo(int n) {
        return n > 0 && ((n & (n - 1)) == 0);
    }
};
